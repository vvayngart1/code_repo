ifeq ($(BITS),)
BITS=64
endif

OPT_ROOT=/opt/tradework

#ZMQ
TW_INCL   += $(OPT_ROOT)/zmq/include
TW_LIBDIR += $(OPT_ROOT)/zmq/lib
TW_LIB    += zmq

# Boost
#
TW_INCL   += $(OPT_ROOT)/boost/1.53.0/include
TW_LIBDIR += $(OPT_ROOT)/boost/1.53.0/lib
TW_LIB    += boost_date_time
TW_LIB    += boost_program_options
TW_LIB    += boost_thread
TW_LIB    += boost_system
TW_LIB    += boost_regex
TW_LIB    += boost_filesystem

# GTest (Google Test)
#
TW_INCL   += $(OPT_ROOT)/gtest/1.6.0/include
TW_LIBDIR += $(OPT_ROOT)/gtest/1.6.0/lib
TW_LIB    += gtest
TW_LIB    += gtest_main

# Onix
#

# Onix CME pf
#
ifeq ($(ONIX_VER),legacy)
TW_INCL   += $(OPT_ROOT)/onix/pf/2.13.2.0/include
TW_LIBDIR += $(OPT_ROOT)/onix/pf/2.13.2.0/lib
else
TW_INCL   += $(OPT_ROOT)/onix/pf/2.51.0.0/include
TW_LIBDIR += $(OPT_ROOT)/onix/pf/2.51.0.0/lib
endif
TW_LIB    += OnixS.CmeMarketDataHandlerCpp

# Onix CME or
#
TW_INCL   += $(OPT_ROOT)/onix/or/2.83.0.0/include
TW_LIBDIR += $(OPT_ROOT)/onix/or/2.83.0.0/lib
TW_LIB    += ffCppFixEngine

# Onix CME or drop copy
#
TW_INCL   += $(OPT_ROOT)/onix/drop/1.3.0.0/include
TW_LIBDIR += $(OPT_ROOT)/onix/drop/1.3.0.0/lib
TW_LIB    += OnixS.CmeDropCopyHandlerCpp

# Onix General
#
TW_LIB    += ACE
TW_CPPFLAGS += -D_REENTRANT -D_LINUX -m$(BITS)
TW_LDFLAGS += -m$(BITS)

# MySql
#
TW_INCL   += $(OPT_ROOT)/mysql-connector/1.1.0/include
TW_LIBDIR += $(OPT_ROOT)/mysql-connector/1.1.0/lib
TW_LIB    += mysqlcppconn


#TODO write a loop to extract dirs from TW_LIBDIR var
#
#$(foreach l,$(TW_LIBDIR),$(eval $(call TW_RPATH_fnc,$(l))))
#$(foreach l,$(TW_LIBDIR), $(call TW_RPATH_fnc,$(l)))
#TW_RPATH = -Wl,-rpath -Wl,
#define TW_RPATH_fnc =
#    @echo $$($(1))
#    TW_RPATH += $$($(1))
#    TW_RPATH += ":"
#endef

ifeq ($(ONIX_VER),legacy)
TW_RPATH += -Wl,-rpath -Wl,$(OPT_ROOT)/boost/1.53.0/lib:$(OPT_ROOT)/gtest/1.6.0/lib:$(OPT_ROOT)/onix/pf/2.13.2.0/lib:$(OPT_ROOT)/mysql-connector/1.1.0/lib:$(OPT_ROOT)/lib64/mysql:$(OPT_ROOT)/onix/or/2.83.0.0/lib:$(OPT_ROOT)/onix/drop/1.3.0.0/lib
else
TW_RPATH += -Wl,-rpath -Wl,$(OPT_ROOT)/boost/1.53.0/lib:$(OPT_ROOT)/gtest/1.6.0/lib:$(OPT_ROOT)/onix/pf/2.51.0.0/lib:$(OPT_ROOT)/mysql-connector/1.1.0/lib:$(OPT_ROOT)/lib64/mysql:$(OPT_ROOT)/onix/or/2.83.0.0/lib:$(OPT_ROOT)/onix/drop/1.3.0.0/lib
endif


DOXYGEN = /usr/bin/doxygen
CC=/opt/llvm33/bin/clang
CXX=/opt/llvm33/bin/clang++
XSLTPROC=/usr/bin/xsltproc --xinclude

ifeq ($(CFG),debug)
else ifeq ($(CFG),release)
TW_CPPFLAGS += -DNDEBUG
else 
$(error no known configuration)
endif

ifeq ($(MODE),verbose)
CC += -v
CXX += -v
endif

# Existing is tantamount to boolean true
#
#TW_CPPFLAGS += -DDEBUG_PRINT
